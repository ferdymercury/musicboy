"""
This script generates values for constants that are shared between
the C code running on the STM32 and the assembly code running on the
Game Boy's Z80.
"""

REGISTER_BASE_VALUE = 0xA000
REGISTER_PREFIX = "AUDIO_REGISTER_"
REGISTER_NAMES = [
    "COMMANDS",
    "GAME_STATE",
    "LEVEL"
]

REGISTERS = dict([
    (name, REGISTER_BASE_VALUE + i)
    for (i, name) in enumerate(REGISTER_NAMES)
])

COMMAND_PREFIX = "AUDIO_COMMAND_"
COMMANDS = {
    "NONE": 0x00,
    "PAUSE": 0x20,
    "UNPAUSE": 0x40,
    "PLAY": 0x80,
}


def generate_z80_assembly(constant_name, constant_value):
    return "%s   EQU $%02x" % (COMMAND_PREFIX + constant_name, constant_value)


def generate_c_command(constant_name, constant_value):
    return "#define %s 0x%02x" % (
        COMMAND_PREFIX + constant_name, constant_value)


def generate_z80_assembly_register(constant_name, constant_value):
    return "%s   EQU $%02x" % (REGISTER_PREFIX + constant_name, constant_value)


def generate_c_register(constant_name, constant_value):
    return "#define %s (SHARED_MEMORY[0x%02x])" % (
        REGISTER_PREFIX + constant_name,
        constant_value - REGISTER_BASE_VALUE)


def generate_audio_constants():
    with open('./audio_constants.h', 'w') as f:
        f.write(
            "// This file automatically generated by "
            "generate_audio_constants.py\n")
        for name, value in COMMANDS.iteritems():
            f.write(generate_c_command(name, value))
            f.write("\n")
        for name, value in REGISTERS.iteritems():
            f.write(generate_c_register(name, value))
            f.write("\n")

    with open('./gbrom/audio_constants.asm', 'w') as f:
        f.write(
            "; This file automatically generated by "
            "generate_audio_constants.py\n")
        for name, value in COMMANDS.iteritems():
            f.write(generate_z80_assembly(name, value))
            f.write("\n")
        for name, value in REGISTERS.iteritems():
            f.write(generate_z80_assembly_register(name, value))
            f.write("\n")

if __name__ == "__main__":
    generate_audio_constants()
